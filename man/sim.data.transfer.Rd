% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{sim.data.transfer}
\alias{sim.data.transfer}
\title{Data simulation for transfer learning}
\usage{
sim.data.transfer(
  prob.common = 0.05,
  prob.separate = 0.05,
  q = 3,
  n0 = c(50, 100, 200),
  n1 = 10000,
  p = 200,
  rho = 0.5,
  family = "gaussian"
)
}
\arguments{
\item{prob.common}{probability of common effect}

\item{prob.separate}{probability of separate effect}

\item{q}{number of datasets: integer}

\item{n0}{number of training samples: integer vector of length q}

\item{n1}{number of testing samples for all datasets: integer}

\item{p}{number of features: integer}

\item{rho}{correlation (for decreasing structure)}

\item{family}{character "gaussian" or "binomial"}
}
\value{
Returns a list with slots y_train and X_train for training data,
y_test and X_test for testing data,
and beta for effects.
The training data contains vectors of different lengths (y_train)
and matrices with different number of rows (X_train).
}
\description{
Simulates data for transfer learning.
}
\examples{
data <- sim.data.transfer()
sapply(X=data$y_train,FUN=length)
sapply(X=data$X_train,FUN=dim)
sapply(X=data$y_test,FUN=length)
sapply(X=data$X_test,FUN=dim)
dim(data$beta)

}
